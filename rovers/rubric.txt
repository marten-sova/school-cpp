This is the grading rubric for the Rovers programming assignment.

================
If the program fails to compile, crashes, or hangs then the program
automatically gets a 0.
================

Functionality	     5
 - output for commands.txt matches expected.txt 100% (including all
 whitespace)
 - the program runs on commands.txt in less than 2 seconds

Implementation	    10
 - each rover contains a stack implemented as a linked list
 - each rover contains a pointer to the shared results queue
 - the results queue is implemented with a circular array.
 - has a copy constructor, assignment operator, and destructor for all classes
   that have pointer data members.
 - no memory leaks
 - no memory errors
 - rovercontrol.cpp is unchanged

Design		     3
 - uses at least the following classes: rovers, stack, and queue
 - the rover class doesn't contain any implementation for the stack or queue
 - the stack and queue classes don't do any output (except for optional debugging)

Style		     2
 - each class is defined in a separate file
 - class definition and implementation are in separate files (unless a template)
 - at most 1 return statement per function or method
 - doesn't use of "break" or "continue" in a loop

Total:		    20
